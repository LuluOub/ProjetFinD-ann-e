import pyxel
from random import *


class App:
    def __init__(self):
        pyxel.init(160, 160)

        self.vaisseau_x = 80
        self.vaisseau_y = 110

        # Liste de tir avec leurs coordonées 
        self.tir_liste = []
        
        # Liste d'enemis
        self.enemis_liste = []
        
        self.a = 0
        self.vie = 3
        
        self.tir_x = self.vaisseau_x
        self.tir_y = self.vaisseau_y - 10

        self.enemis_x = randint(0,160)
        self.enemis_y = 0

        pyxel.load("my_resource.pyxres")
        
        pyxel.run(self.update, self.draw)




    def deplacement(self):
        #But : deplacer l'objets rectangles qui a les coordonées du vaisseau
        #Entree : self
        #Sortie : a chaque frame on regarde si soit le bouton Haut, soit Bas,soit Gauche, soit Droite, est pressé si il y en a un qui est pressée on enleve un a la coordonées soit x soit y ce qui fera deplacer
        #le vaisseau 

        
        if pyxel.btnp(pyxel.KEY_UP, True,True) and self.vaisseau_y > 0:
            self.vaisseau_y = self.vaisseau_y - 2

        if pyxel.btnp(pyxel.KEY_DOWN,True,True)and self.vaisseau_y < 144:
            self.vaisseau_y = self.vaisseau_y + 2

        if pyxel.btnp(pyxel.KEY_LEFT,True,True)and self.vaisseau_x > 0:
            self.vaisseau_x = self.vaisseau_x - 2

        if pyxel.btnp(pyxel.KEY_RIGHT,True,True)and self.vaisseau_x < 144:
            self.vaisseau_x = self.vaisseau_x + 2

        if pyxel.btnp(pyxel.KEY_Q):
            pyxel.quit()


    def creationenemis(self):
        # But : créer toute les 2 secondes un enemis
        # Entree : la liste enemis_liste
        # Sortie : toute les 2 secondes / 60 frames un enemis apparait en y = 0 et en x = allant de 0 à 160 
        if (pyxel.frame_count % 60 == 0):
            self.enemis_liste.append([randint(8, 152), 0])
        if(pyxel.frame_count >= 600):
            if (pyxel.frame_count % 30 == 0):
                self.enemis_liste.append([randint(8, 152), 0])   
        if(pyxel.frame_count >= 1200):
            if (pyxel.frame_count % 15 == 0):
                self.enemis_liste.append([randint(8, 152), 0]) 


    def deplacementennemis(self):
        
        
        #But : Faire que l'ennemis se déplace
        #Entrée : self ce qui a était initialisé dans le init, la liste enemis_liste
        #Sortie : Pour chaque enemis a chaque frame, la coordonées y a un +1 pour que l'enemis descende, comme pour le tir si il la coordonées y est superieur a 158 alors l'enemis est supprimé 

        
        for enemis in self.enemis_liste:
            enemis[1] = enemis[1] + 1
            if enemis[1] > 158:
                self.enemis_liste.remove(enemis)
            


    def tir_creation(self):
        if pyxel.btnr(pyxel.KEY_SPACE):
            self.tir_liste.append([self.vaisseau_x+8,self.vaisseau_y-8])
            
            
# But : Créer le tir
#Entrée : self ce qui a était initialisé dans le init
#Sortie : a chaque fois que la barre espace est pressée on ajoute dans la liste tir_list un tir de coordonées vaisseau_x +8 car le vaisseau fait 16 pixel et on veut qu'il soit au millieu et de coord vaisseau y - 8 pour qu'il soit au dessus du personnage 


    def tir_deplacement(self):
        for tir in self.tir_liste:
            tir[1] -= 1
            if tir[1]< 8:
                self.tir_liste.remove(tir)
# But : Deplacer le tir
# Entrée : self ce qui a était initialisé dans le init
# Sortie : Le tir est deplacer de 1 a chaque frame et si il atteint 8 en y il est supprimer 
                    
                    
                    
                                 
    def colision(self):
        
            
# But : Créer la colision
# Entrée : self ce qui a était initialisé dans le init, les coordonées 
# Sortie : detecter si la coordonées est la meme avec l'enemis et le vaisseau et quitter si il y a cette colision 
        if self.vaisseau_x-16 == self.enemis_x:
            if self.vaisseau_y-16 == self.enemis_y:
                pyxel.quit()

    def update(self):
        self.deplacement()
        self.deplacementennemis()
        self.tir_creation()
        self.tir_deplacement()
        self.colision()
        self.creationenemis()

    def draw(self):
        pyxel.cls(0)
        pyxel.blt(self.vaisseau_x,self.vaisseau_y,0,0,0,16,16)

        for tir in self.tir_liste:
            pyxel.blt(tir[0],tir[1],1,0,0,1,5)
            
        for enemis in self.enemis_liste:
            pyxel.blt(enemis[0],enemis[1],2,0,0,8,6)

App()
